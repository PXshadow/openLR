// Generated by Haxe 3.4.0
#ifndef INCLUDED_lime_graphics_opengl_ExtensionAnisotropicFiltering
#define INCLUDED_lime_graphics_opengl_ExtensionAnisotropicFiltering

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(lime,graphics,opengl,ExtensionAnisotropicFiltering)

namespace lime{
namespace graphics{
namespace opengl{


class HXCPP_CLASS_ATTRIBUTES ExtensionAnisotropicFiltering_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ExtensionAnisotropicFiltering_obj OBJ_;
		ExtensionAnisotropicFiltering_obj();

	public:
		enum { _hx_ClassId = 0x40a3e8c9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.graphics.opengl.ExtensionAnisotropicFiltering")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.graphics.opengl.ExtensionAnisotropicFiltering"); }

		hx::ObjectPtr< ExtensionAnisotropicFiltering_obj > __new() {
			hx::ObjectPtr< ExtensionAnisotropicFiltering_obj > __this = new ExtensionAnisotropicFiltering_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< ExtensionAnisotropicFiltering_obj > __alloc(hx::Ctx *_hx_ctx) {
			ExtensionAnisotropicFiltering_obj *__this = (ExtensionAnisotropicFiltering_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ExtensionAnisotropicFiltering_obj), false, "lime.graphics.opengl.ExtensionAnisotropicFiltering"));
			*(void **)__this = ExtensionAnisotropicFiltering_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ExtensionAnisotropicFiltering_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ExtensionAnisotropicFiltering","\xb8","\x4e","\x57","\xb0"); }

		static void __boot();
		static int TEXTURE_MAX_ANISOTROPY_EXT;
		static int MAX_TEXTURE_MAX_ANISOTROPY_EXT;
};

} // end namespace lime
} // end namespace graphics
} // end namespace opengl

#endif /* INCLUDED_lime_graphics_opengl_ExtensionAnisotropicFiltering */ 
