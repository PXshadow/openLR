// Generated by Haxe 3.4.0
#ifndef INCLUDED_ui_tool_icon_IconBase
#define INCLUDED_ui_tool_icon_IconBase

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
HX_DECLARE_CLASS2(openfl,display,Bitmap)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,MovieClip)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS3(ui,tool,icon,IconBase)

namespace ui{
namespace tool{
namespace icon{


class HXCPP_CLASS_ATTRIBUTES IconBase_obj : public  ::openfl::display::MovieClip_obj
{
	public:
		typedef  ::openfl::display::MovieClip_obj super;
		typedef IconBase_obj OBJ_;
		IconBase_obj();

	public:
		enum { _hx_ClassId = 0x0f1199ef };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.tool.icon.IconBase")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"ui.tool.icon.IconBase"); }
		static hx::ObjectPtr< IconBase_obj > __new();
		static hx::ObjectPtr< IconBase_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~IconBase_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("IconBase","\x4a","\x68","\xca","\x47"); }

		int debug_alpha;
		 ::openfl::display::Bitmap icon;
		void alt( ::openfl::events::MouseEvent e);
		::Dynamic alt_dyn();

		virtual void down( ::openfl::events::MouseEvent e);
		::Dynamic down_dyn();

		void enable_tool( ::openfl::events::MouseEvent e);
		::Dynamic enable_tool_dyn();

		void disable_tool( ::openfl::events::MouseEvent e);
		::Dynamic disable_tool_dyn();

		void enable();
		::Dynamic enable_dyn();

};

} // end namespace ui
} // end namespace tool
} // end namespace icon

#endif /* INCLUDED_ui_tool_icon_IconBase */ 
