// Generated by Haxe 3.4.0
#ifndef INCLUDED_ui_tool_lr_ToolPencil
#define INCLUDED_ui_tool_lr_ToolPencil

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_ui_tool_ToolBase
#include <ui/tool/ToolBase.h>
#endif
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS2(openfl,geom,Point)
HX_DECLARE_CLASS2(ui,tool,ToolBase)
HX_DECLARE_CLASS3(ui,tool,lr,ToolPencil)

namespace ui{
namespace tool{
namespace lr{


class HXCPP_CLASS_ATTRIBUTES ToolPencil_obj : public  ::ui::tool::ToolBase_obj
{
	public:
		typedef  ::ui::tool::ToolBase_obj super;
		typedef ToolPencil_obj OBJ_;
		ToolPencil_obj();

	public:
		enum { _hx_ClassId = 0x5445f1d7 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.tool.lr.ToolPencil")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"ui.tool.lr.ToolPencil"); }
		static hx::ObjectPtr< ToolPencil_obj > __new();
		static hx::ObjectPtr< ToolPencil_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ToolPencil_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ToolPencil","\x65","\xd9","\x0f","\x54"); }

		 ::openfl::geom::Point a;
		 ::openfl::geom::Point b;
		 ::openfl::geom::Point c;
		 ::openfl::geom::Point d;
		void mouseDown( ::openfl::events::MouseEvent e);

		void pencil_move( ::openfl::events::MouseEvent e);
		::Dynamic pencil_move_dyn();

		void mouseUp( ::openfl::events::MouseEvent e);

};

} // end namespace ui
} // end namespace tool
} // end namespace lr

#endif /* INCLUDED_ui_tool_lr_ToolPencil */ 
