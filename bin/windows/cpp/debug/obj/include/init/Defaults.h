// Generated by Haxe 3.4.0
#ifndef INCLUDED_init_Defaults
#define INCLUDED_init_Defaults

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_0694247e9276afbb_11_new)
HX_DECLARE_CLASS1(init,Defaults)

namespace init{


class HXCPP_CLASS_ATTRIBUTES Defaults_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Defaults_obj OBJ_;
		Defaults_obj();

	public:
		enum { _hx_ClassId = 0x12f62e82 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="init.Defaults")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"init.Defaults"); }

		hx::ObjectPtr< Defaults_obj > __new() {
			hx::ObjectPtr< Defaults_obj > __this = new Defaults_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Defaults_obj > __alloc(hx::Ctx *_hx_ctx) {
			Defaults_obj *__this = (Defaults_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Defaults_obj), false, "init.Defaults"));
			*(void **)__this = Defaults_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_0694247e9276afbb_11_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Defaults_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Defaults","\xb2","\x8c","\x4b","\x89"); }

};

} // end namespace init

#endif /* INCLUDED_init_Defaults */ 
