// Generated by Haxe 3.4.0
#ifndef INCLUDED_init_FileStart
#define INCLUDED_init_FileStart

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(init,FileStart)

namespace init{


class HXCPP_CLASS_ATTRIBUTES FileStart_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FileStart_obj OBJ_;
		FileStart_obj();

	public:
		enum { _hx_ClassId = 0x13a8e856 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="init.FileStart")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"init.FileStart"); }
		static hx::ObjectPtr< FileStart_obj > __new();
		static hx::ObjectPtr< FileStart_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FileStart_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("FileStart","\x26","\xf4","\x05","\x28"); }

		bool ready;
		void loadSettings();
		::Dynamic loadSettings_dyn();

		void checkDirectories();
		::Dynamic checkDirectories_dyn();

};

} // end namespace init

#endif /* INCLUDED_init_FileStart */ 
