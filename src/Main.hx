package;

import base.cores.Flash;
import base.cores.JavaScript;
import base.cores.NativeCPP;
import openfl.display.Sprite;

import base.CoreBase;
import global.Common;

/**
 * ...
 * @author Kaelan Evans
 * 
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * //OpenLR Project Release Alpha 0.0.5
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * 
 * This program was built using HaxeDevelop IDE, with haxe and openFL. Other libraries if used can be found in project.xml
 * 
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * //Known issues to work around
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * 
 *  --Performance drop when too many lines are in memory and track has to pan. This seems to only occur during the simulation, but isn't a problem with the sim itself
 * 		-Two fold solution
 * 			-Better frustum culling. Current method tries to toggle visibility per line, need to toggle visibility per node.
 * 			-Better camera system. Current method is like pushing a piece of paper around.
 *  --Saving track causes physics to break. Once saved, problem is irreversable, but only happens once. Unknown what the cause is. Need to double check on loading and saving.
 * 
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * //Notes
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * 
 * --Need to clean up some of the "rabbit hole" functions. Starting to get lost in my own code.
 * --Need to make some UI classes. Check boxes, radio buttons, lists.
 * 		-OpenFL broke mouse collisions regarding sprites that use vector graphics. Need to incorperate button class.
 * --Need to work on defaults for settings. Alpha 0.0.4 will probably be that
 * 
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * //To do
 * /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 * 
 * -- LZ-String port, this is needed if compatibility with .com must happen
 * -- UI system. Menus, checkboxes, radio buttons, arbitrarily sized buttons, fonts, blah blah blah
 * -- Better file management. Save with name support, save as (arbitrary location), load from saves folder, and browse. Look into Lime API.
 * -- conditionals
 * 
 */
class Main extends Sprite 
{
	private var core:CoreBase;
	public function new() {
		
		super();
		
		Common.gStage = this.stage; //The stage, not to be comfused with main.hx
		
		#if (cpp)
			this.core = new NativeCPP(this.stage);
		#elseif (flash)
			this.core = new Flash(this.stage);
		#elseif (js)
			this.core = new JavaScript(this.stage)
		#end
	}
}
